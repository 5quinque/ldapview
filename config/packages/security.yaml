security:
  # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
  providers:
    my_ldap:
      ldap:
        service: Symfony\Component\Ldap\Ldap
        base_dn: dc=example,dc=org
        search_dn: '%env(LDAP_USER)%'
        search_password: '%env(LDAP_PASS)%'
        default_roles: ROLE_USER
        uid_key: uid
        password_attribute: 'userPassword'
    in_memory: { memory: null }
  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      anonymous: true

      form_login_ldap:
          service: Symfony\Component\Ldap\Ldap
          provider: my_ldap
          dn_string: 'dc=example,dc=org'
          query_string: '(&(uid={username})(memberOf=ou=people,dc=example,dc=org))'
      guard:
          provider: my_ldap
          authenticators:
              - App\Security\LoginFormAuthenticator
      logout:
          path: app_logout
          # where to redirect after logout
          # target: app_any_route

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#firewalls-authentication

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
  # - { path: ^/admin, roles: ROLE_ADMIN }
  # - { path: ^/profile, roles: ROLE_USER }
